{"version":3,"sources":["webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VCheckbox/VCheckbox.ts","webpack:///../../../src/components/VBtn/index.ts","webpack:///../../../src/components/VDivider/VDivider.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["name","directives","ripple","props","type","Boolean","default","methods","genRipple","data","this","value","center","Object","click","onChange","$createElement","valueComparator","indeterminate","indeterminateIcon","offIcon","onIcon","inputIndeterminate","computed","classes","computedIcon","validationState","isDisabled","hasError","hasColor","watch","isActive","genCheckbox","staticClass","setTextColor","dense","dark","light","genInput","toString","genDefaultSlot","inset","vertical","render","$attrs","role","orientation","h","class","themeClasses","attrs","on","$listeners","root","isDark","$slots","node","baseMixins","mixins","activator","validator","val","includes","disabled","internalActivator","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","mounted","slotType","beforeDestroy","addActivatorEvents","keys","key","genActivator","genActivatorAttributes","String","genActivatorListeners","e","getActivator","target","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","validateAttachTarget","Node","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","$refs","content","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","document","stackElement","stackExclude","stackMinZIndex","activeZIndex","window","index","getMaxZIndex","parseInt","exclude","base","zis","activeElements","Math","allowOverflow","maxWidth","Number","minWidth","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","openOnClick","positionX","positionY","zIndex","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","top","left","bottom","right","width","height","offsetTop","scrollHeight","offsetLeft","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","computedLeft","a","c","activatorLeft","isNaN","computedTop","hasActivator","$scopedSlots","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","onClick","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","requestAnimationFrame","cb","startTransition","Promise","resolve","updateDimensions","returnValue","originalValue","save","setTimeout","provide","isInMenu","theme","ClickOutside","Resize","auto","closeOnClick","closeOnContentClick","disableKeys","maxHeight","offsetX","offsetY","origin","transition","calculatedTopAuto","defaultOffset","listIndex","resizeTimeout","selectedIndex","tiles","activeTile","calculatedLeft","menuWidth","parseFloat","calculatedMaxHeight","calculatedMaxWidth","calculatedMinWidth","calculatedTop","hasClickableTiles","find","tile","styles","transformOrigin","next","prev","classList","remove","created","hasOwnProperty","calcScrollPosition","$el","maxScrollTop","calcLeftAuto","calcTopAuto","tileDistanceFromMenuTop","firstTileOffsetTop","changeListIndex","closeConditional","contains","attributes","id","genTransition","genDirectives","handler","include","genContent","options","menuable__content__active","ref","keydown","onKeyDown","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","onResize","clearTimeout","arg","showLazyContent","model","prop","event","inputValue","falseValue","trueValue","multiple","label","lazyValue","computedColor","isMultiple","input","item","undefined","isDirty","rippleState","genLabel","domProps","checked","blur","change","focus","onKeydown","onBlur","onFocus"],"mappings":"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","file":"js/apply~back.5b7ebfa2.js","sourcesContent":["// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n      data.on = Object.assign({\n        click: this.onChange,\n      }, this.$listeners)\n\n      return this.$createElement('div', data)\n    },\n    onChange () {},\n  },\n})\n","import Vue, { PropType } from 'vue'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n  },\n})\n","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...this.attrs$,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        click: (e: Event) => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault()\n\n          this.onChange()\n        },\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}